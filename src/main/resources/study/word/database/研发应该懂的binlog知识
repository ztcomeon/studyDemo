研发应该懂的binlog知识(上)

=================================
https://www.cnblogs.com/rjzheng/p/9721765.html
研发究竟要懂哪些? 主要分为两个部分

binlog的相关概念
怎么解析binlog

"一个定义,两个误解,三个用途,四个常识"

一个定义:
	binlog是记录所有数据库表结构变更（例如CREATE、ALTER TABLE…）以及表数据修改
	（INSERT、UPDATE、DELETE…）的二进制日志。
	多说一句，如果update操作没有造成数据变化，也是会记入binlog。

两个误解：
	误解一:binlog只是一类记录操作内容的日志文件
		因为binlog称之为二进制日志，很多研发会把这个二进制日志和我们平时在代码里写的代码日志联系在一起。
		因为我们的代码日志，只有一类记录操作容的文件，并不包含索引文件。
		然而，这个二进制日志包括两类文件：
			索引文件（文件名后缀为.index）用于记录哪些日志文件正在被使用
			日志文件（文件名后缀为.00000*）记录数据库所有的DDL和DML(除了数据查询语句)语句事件。

		假设文件my.cnf中有这么三条配置（使用binlog，需要先开启）
		log_bin：on   打开binlog日志
		log_bin_basename：bin文件路径及名前缀（/var/log/mysql/mysql-bin）
		log_bin_index：bin文件index（/var/log/mysql/mysql-bin.index）

		那么你会在文件目录/var/log/mysql/下面发现两个文件mysql-bin.000001（日志文件）和mysql-bin.index（索引文件）。

	误解二：binlog是InnoDb独有的
		binlog是以事件形式记录的，这句话通俗点说，就是binlog的内容都是一个个的事件。
		注意了，这里的用词，是一个个事件，而不是事务。
		binlog不仅记录innodb日志，在myisam中，也一样存在binlog。

三个用途：
	这三个用途，出自《MySQL技术内幕 InnoDB存储引擎》一书，分别为恢复、复制、审计。研发了解便可，很少接触

	恢复：这里网上有大把的文章指导你，如何利用binlog日志恢复数据库数据

	复制: 如图，主库有一个log dump线程，将binlog传给从库，从库有两个线程，一个I/O线程，一个SQL线程，
		  I/O线程读取主库传过来的binlog内容并写入到relay log,SQL线程从relay log里面读取内容，写入从库的数据库。

	审计：用户可以通过二进制日志中的信息来进行审计，判断是否有对数据库进行注入攻击。

四个常识：
	常识一:binlog常见格式
		statement：记录的是修改SQL语句，日志文件小，节约IO，提高性能，准确性差
		row：记录的是每行实际数据的变更，准确性强，能准确复制数据的变更，日志文件大，较大的网络IO和磁盘IO
		mixed：statement和row模式的混合，准确性强，文件大小适中，有可能发生主从不一致问题

		业内目前推荐使用的是row模式，准确性高，

	常识二:怎查看binlog
		binlog本身是一类二进制文件。二进制文件更省空间，写入速度更快，是无法直接打开来查看的。
		因此mysql提供了命令mysqlbinlog进行查看。
		一般的statement格式的二进制文件，用下面命令就可以
		mysqlbinlog mysql-bin.000001
		如果是row格式，加上-v或者-vv参数就行，如
		mysqlbinlog -vv mysql-bin.000001

	常识三:怎么删binlog
		删binlog的方法很多，有三种是常见的
		(1) 使用reset master,该命令将会删除所有日志，并让日志文件重新从000001开始。
		(2) 使用命令
			PURGE { BINARY | MASTER } LOGS { TO 'log_name' | BEFORE datetime_expr }
		(3) 使用--expire_logs_days=N选项指定过了多少天日志自动过期清空。

	常识四:binlog常见参数

研发应该懂的binlog知识(下)
====================================
https://www.cnblogs.com/rjzheng/p/9745551.html
研发为什么要懂得如何解析binlog?
说句实在话，如果在实际项目中遇到，我确实推荐使用现成的jar包来解析，比如mysql-binlog-connector-java或者open-replicator等。
具体操作可以去参考一下其他博客






