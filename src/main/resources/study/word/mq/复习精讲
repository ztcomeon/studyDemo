
敖丙：
重复消费、顺序消费、分布式事务

1.如何保证消息不被重复消费：
	这个问题的另一种叫法是：接口幂等性问题（多次执行，结果一样）
	分场景进行校验，要求高的（钱相关的）就用强校验，要求低的可以用弱校验
	强校验：加钱的后面调用加流水的接口，两个放在一个事务里，用 订单号+场景的唯一标识 去查流水表是否已经有
	弱校验：id+场景唯一标识放在redis中作为key，一定时间内去判断
	还有其他很多方式，比如token等

2.如何保证消息顺序消费
    queue（队列）中的消息只能被一个消费者所消费，然后消费者在消费消息的过程中是无序的。

=================

孤独烟：
分布式之消息队列复习精讲
https://www.cnblogs.com/rjzheng/p/8994962.html

1.为什么使用消息队列？
2.使用消息队列有什么缺点?
3.消息队列如何选型?
4.如何保证消息队列是高可用的？
5.如何保证消息不被重复消费?
6.如何保证消费的可靠性传输?
7.如何保证消息的顺序性？

--
1.为什么使用消息队列？
优点：解耦、异步、削峰

2.使用消息队列有什么缺点?
缺点：系统的可用性降低，复杂程度加大，毕竟新加入了一个技术

3.消息队列如何选型?
ActiveMQ          RabbitMQ         RocketMQ                   kafka
java                erlang          java                      scala
万级                  万级            10万级                    10万级
ms级                 us级             ms级                     ms级以内
高(主从架构)          高(主从架构)    非常高(分布式架构)          非常高(分布式架构)
                                                              只支持主要的MQ功能，大数据日志
中小型软件公司，建议选RabbitMQ
大型软件公司，根据具体使用在rocketMq和kafka之间二选一

4、如何保证消息队列是高可用的？
集群
rocketMQ集群：就有 多master 模式、多master多slave异步复制模式、多 master多slave同步双写模式
Kafka集群：若干Producer（可以是web前端产生的Page View，或者是服务器日志，系统CPU、Memory等），
           若干broker（Kafka支持水平扩展，一般broker数量越多，集群吞吐率越高），
           若干Consumer Group，以及一个Zookeeper集群
rabbitMQ集群:也有  普通集群,镜像集群模式

对于rabbitMQ集群：
    普通集群：多个机器，每个机器一个rabbitmq实例，创建的queue队列存放在一个rabbitmq上，其他rabbitmq实例同步
            queue的元数据（queue的配置信息，能根据这个找到此queue），消费时如果连接到另一个rabbitmq实例，
            此实例会根据queue所在的实例上拉取数据过来
    镜像集群：rabbitmq的高可用模式，每个rabbitmq实例都有创建的queue的数据和消息，消息到这个queue时，会
            自动把消息同步到多个实例的queue上（就像镜像一样，但是性能开销比较大）

5.如何保证消息不被重复消费?
换句话说就是：  如何保证消息队列的幂等性
那造成重复消费的原因?就是因为  网络传输， bug，数据问题 等等故障
大概思想就是
