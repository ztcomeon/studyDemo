
学习demo
============================================================================================================================
1.jackson 是springboot默认的json处理工具，不需要引入jar包，可以直接使用，fastjson是阿里巴巴的工具、

2.jackson和fastjson区别
fastjson更注重快速，但是jackson和其相比速度并没有差距很大，
jackson优势，可定制性，api灵活，可以定制扩展，代码质量高，fastjson可能会出现bug（不过bug有在修改）
https://www.zhihu.com/question/44199956  参考知乎答案

3.jackson使用
参见TestController和JsonDemoApplicationTests

============================================================================================================================
springboot bean 的生命周期
bean的生命周期，这里是主要的一些，完整的可以在去查资料
  实现了：三个aware接口 BeanNameAware, BeanFactoryAware, ApplicationContextAware,设置bean名称,工厂,上下文
          两个bean的接口 InitializingBean, DisposableBean,初始化和销毁
          后置处理器BeanPostProcessor   初始化方法的前后调用后置处理器
    在Spring中，对象的实例化是通过反射实现的，而对象的属性则是在对象实例化之后通过一定的方式设置的(先实例化,在初始化)

bean启动，BeanConfig类  new出一个实例,实例化
设置bean的属性
BeanNameAware接口  @bean注解中name属性，设置bean的名称
BeanFactoryAware接口，调用setBeanFactory()方法，将BeanFactory容器实例传入
ApplicationContextAware接口 setApplicationContext()方法，将bean所在应用上下文引用传入进来
BeanPostProcessor接口(后置处理器)，调用postProcessBeforeInitialization()方法。
@PostConstruct 注解，
InitializingBean接口，调用他们的afterPropertiesSet()方法
initMethod指定的方法，自定义初始化方法
BeanPostProcessor接口(后置处理器)，调用postProcessAfterInitialization()方法
@PreDestory 注解
DisposableBean接口，调用destory()接口方法
destroyMethod指定的方法，自定义的销毁方法

https://www.cnblogs.com/javazhiyin/p/10905294.html  参考链接


==============================================================================================================================
spring的循环依赖
https://zhuanlan.zhihu.com/p/84267654
https://www.zhihu.com/question/39814046/answer/550590260
关于Spring bean的创建，其本质上还是一个对象的创建，一个完整的对象包含两部分：当前对象实例化和对象属性的实例化。
在Spring中，对象的实例化是通过反射实现的，而对象的属性则是在对象实例化之后，通过一定的方式设置的。（bean生命周期的前两步）

Spring是通过  递归  的方式获取目标bean及其所依赖的bean的；
Spring实例化一个bean的时候，是分两步进行的，首先实例化目标bean，然后为其注入属性。



